{"ast":null,"code":"var _jsxFileName = \"/home/beneathatree/hva_task/frontend/src/Component/UserDashboard.js\",\n  _s = $RefreshSig$();\n// components/Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  token,\n  userId\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    profile: \"\"\n  });\n  console.log(\"formData\", formData);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      // Check if userId is defined before making the API request\n      try {\n        const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\n        setFormData({\n          email: user.email,\n          password: response.data.password,\n          name: response.data.name,\n          address: response.data.address,\n          phone: response.data.phone,\n          profile: response.data.profile\n        });\n\n        // setLoading(false);\n      } catch (err) {\n        console.log('Error from UpdateBookInfo');\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   try {\n  //     const updateResponse = await axios.put(\n  //       `http://localhost:5000/api/user/${userId}`,\n  //       formData,\n  //     )\n\n  //     const updatedUser = updateResponse.data;\n  //     console.log(\"Data updated successfully!\", updatedUser);\n  //     setFormData(updatedUser);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      src: formData.profile,\n      alt: formData.name,\n      sx: {\n        width: 156,\n        height: 156\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-controlled-email\",\n      name: \"email\",\n      label: \"Email\",\n      value: formData.email || \"\",\n      onChange: handleInputChange,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-controlled-password\",\n      name: \"password\",\n      label: \"Password\",\n      value: formData.password || \"\",\n      onChange: handleInputChange,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-controlled-name\",\n      name: \"name\",\n      label: \"Name\",\n      value: formData.name || \"\",\n      onChange: handleInputChange,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-controlled-address\",\n      name: \"address\",\n      label: \"Address\",\n      value: formData.address || \"\",\n      onChange: handleInputChange,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-controlled-phone\",\n      name: \"phone\",\n      label: \"Phone\",\n      value: formData.phone || \"\",\n      onChange: handleInputChange,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"oDIbK2dvJ2yqM6f+3tuobvGiz5o=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Avatar","TextField","jsxDEV","_jsxDEV","UserDashboard","token","userId","_s","formData","setFormData","email","password","name","address","phone","profile","console","log","fetchUserData","response","get","user","data","err","handleInputChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","sx","width","height","id","label","onChange","fullWidth","_c","$RefreshReg$"],"sources":["/home/beneathatree/hva_task/frontend/src/Component/UserDashboard.js"],"sourcesContent":["// components/Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\n\nconst UserDashboard = ({ token , userId }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    profile:\"\"\n  });\n  console.log(\"formData\", formData)\n  \n  useEffect(() => {\n    const fetchUserData = async () => {\n      // Check if userId is defined before making the API request\n        try {\n          const response = await axios.get(\n            `http://localhost:5000/api/user/${userId}`)\n          \n          setFormData({\n            email:user.email,\n            password:response.data.password,\n            name:response.data.name,\n           address:response.data.address,\n           phone:response.data.phone,\n            profile:response.data.profile})\n\n          \n          // setLoading(false);\n        } catch (err) {\n          console.log('Error from UpdateBookInfo');\n        }\n      }\n    \n\n    fetchUserData();\n  }, [userId]);\n\n\n    \n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   try {\n  //     const updateResponse = await axios.put(\n  //       `http://localhost:5000/api/user/${userId}`,\n  //       formData,\n  //     )\n\n  //     const updatedUser = updateResponse.data;\n  //     console.log(\"Data updated successfully!\", updatedUser);\n  //     setFormData(updatedUser);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleInputChange = (e) => {\n    setFormData({...formData, [e.target.name]:e.target.value})\n  };\n\n  return (\n    <div>\n      <h2>Welcome to Your Dashboard</h2>\n      <Avatar\n        src={formData.profile}\n        alt={formData.name}\n        sx={{ width: 156, height: 156 }}\n      />\n\n      <TextField\n        id=\"outlined-controlled-email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formData.email || \"\"}\n        onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-password\"\n        name=\"password\"\n        label=\"Password\"\n        value={formData.password || \"\"}\n        onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-name\"\n        name=\"name\"\n        label=\"Name\"\n        value={formData.name || \"\"}\n        onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-address\"\n        name=\"address\"\n        label=\"Address\"\n        value={formData.address || \"\"}\n        onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-phone\"\n        name=\"phone\"\n        label=\"Phone\"\n        value={formData.phone || \"\"}\n        onChange={handleInputChange}\n        fullWidth\n      />\n      {/* <button onClick={handleSubmit}>Update</button> */}\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}