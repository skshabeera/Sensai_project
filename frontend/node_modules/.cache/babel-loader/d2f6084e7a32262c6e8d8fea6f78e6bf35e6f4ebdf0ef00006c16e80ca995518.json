{"ast":null,"code":"var _jsxFileName = \"/home/beneathatree/hva_task/frontend/src/Component/UserDashboard.js\",\n  _s = $RefreshSig$();\n// components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  token,\n  userId\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  console.log(\"formate\", formData);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      // console.log(\"user\", userId)\n      try {\n        const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\n        const user = response.data;\n        // console.log(\"user\", user)\n        setFormData(user);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormData((prevData) => ({\n  //     ...prevData,\n  //     [name]: value,\n  //   }));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", user._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", user.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \"Render other user data properties here\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }, this), \" A visual separator between users\"]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \"))}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"XnOI2K2W9M298y6FLPYECuyF8QY=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","jsxDEV","_jsxDEV","UserDashboard","token","userId","_s","formData","setFormData","console","log","fetchUserData","response","get","user","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","name","email","address","_c","$RefreshReg$"],"sources":["/home/beneathatree/hva_task/frontend/src/Component/UserDashboard.js"],"sourcesContent":["// components/Dashboard.js\nimport React ,{useState, useEffect} from 'react';\nimport axios from 'axios'\nimport TextField from \"@mui/material/TextField\";\n\n\nconst UserDashboard = ({token ,userId}) => {\n  const [formData, setFormData] = useState({});\n  console.log(\"formate\",formData)\n  useEffect(() => {\n    const fetchUserData = async () => {\n      // console.log(\"user\", userId)\n      try {\n\n\n        const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\n       \n        const user = response.data;\n        // console.log(\"user\", user)\n        setFormData(user);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    \n    fetchUserData();\n  }, [userId]);\n  \n \n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormData((prevData) => ({\n  //     ...prevData,\n  //     [name]: value,\n  //   }));\n  // };\n\n  return (\n    <div>\n \n      {/* <h2>Welcome to Your Dashboard</h2>\n      <TextField\n        id=\"outlined-controlled-email\"\n        name=\"email\"\n        label=\"Email\"\n        value={formData.email || ''}\n        // onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-password\"\n        name=\"password\"\n        label=\"Password\"\n        value={formData.password || ''}\n        // onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-name\"\n        name=\"name\"\n        label=\"Name\"\n        value={formData.name || ''}\n        // onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-address\"\n        name=\"address\"\n        label=\"Address\"\n        value={formData.address || ''}\n        // onChange={handleInputChange}\n        fullWidth\n      />\n      <TextField\n        id=\"outlined-controlled-phone\"\n        name=\"phone\"\n        label=\"Phone\"\n        value={formData.phone || ''}\n        // onChange={handleInputChange}\n        fullWidth\n      /> */}\n       <div>\n      <h1>User Dashboard</h1>\n      {/* {formData.map((user) => ( */}\n        <div key={user._id}>\n          <p>User ID: {user._id}</p>\n          <p>Name: {user.name}</p>\n          <p>Email: {user.email}</p>\n          <p>Address: {user.address}</p>\n           Render other user data properties here \n           <hr /> A visual separator between users \n        </div> \n      ))} \n      </div>\n    \n</div>\n) \n \n};\n\nexport default UserDashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,aAAa,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5CY,OAAO,CAACC,GAAG,CAAC,SAAS,EAACH,QAAQ,CAAC;EAC/BT,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC;MACA,IAAI;QAGF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,kCAAiCR,MAAO,EAAC,CAAC;QAE5E,MAAMS,IAAI,GAAGF,QAAQ,CAACG,IAAI;QAC1B;QACAP,WAAW,CAACM,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;;EAGZ;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAAe,QAAA,eA2CGf,OAAA;MAAAe,QAAA,gBACDf,OAAA;QAAAe,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErBnB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,GAAG,WAAS,EAACH,IAAI,CAACQ,GAAG;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnB,OAAA;UAAAe,QAAA,GAAG,QAAM,EAACH,IAAI,CAACS,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnB,OAAA;UAAAe,QAAA,GAAG,SAAO,EAACH,IAAI,CAACU,KAAK;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BnB,OAAA;UAAAe,QAAA,GAAG,WAAS,EAACH,IAAI,CAACW,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,0CAE7B,eAAAnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,qCACT;MAAA,GAPUP,IAAI,CAACQ,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CAAC,OAER;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAGN,CAAC;AAACf,EAAA,CA5FIH,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA8FnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}