{"ast":null,"code":"var _jsxFileName = \"/home/beneathatree/hva_task/frontend/src/Component/Dashboard.js\",\n  _s = $RefreshSig$();\n// ... (other imports)\nimport React from 'react';\nimport EditUser from './EditUser'; // Assuming the path to your EditUser component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedUser, setEditedUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/user/all\");\n      setUsers(response.data);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n  const handleUpdateUser = async id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/user/${id}`);\n      setSelectedUser(response.data);\n      setEditedUser(response.data);\n      navigate('/editprofile'); // Redirect to the edit profile page\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleSaveEditedUser = async () => {\n    try {\n      await axios.put(`http://localhost:5000/api/user/${selectedUser._id}`, editedUser);\n      fetchUsers();\n      setSelectedUser(null); // Clear the selected user\n      setEditedUser(null); // Clear the editedUser data\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        justifyContent: \"center\",\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : users.map(user => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                gutterBottom: true,\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                align: \"center\",\n                children: [\"Email: \", user.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                align: \"center\",\n                children: [\"Address: \", user.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                align: \"center\",\n                children: [\"Phone: \", user.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: () => handleUpdateUser(user._id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(EditUser, {\n          editedUser: editedUser,\n          handleSaveEditedUser: handleSaveEditedUser,\n          setEditedUser: setEditedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"LuLdk0F/S8S1t0r+qMcKw8spjWk=\", true);\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","EditUser","jsxDEV","_jsxDEV","Dashboard","_s","users","setUsers","useState","loading","setLoading","selectedUser","setSelectedUser","editedUser","setEditedUser","navigate","useNavigate","useEffect","fetchUsers","response","axios","get","data","err","console","error","handleUpdateUser","id","handleSaveEditedUser","put","_id","Container","maxWidth","children","Box","mt","Grid","container","spacing","justifyContent","CircularProgress","fileName","_jsxFileName","lineNumber","columnNumber","map","user","item","xs","sm","md","lg","Card","elevation","CardContent","Typography","variant","align","gutterBottom","name","color","email","address","phone","textAlign","Button","onClick","_c","$RefreshReg$"],"sources":["/home/beneathatree/hva_task/frontend/src/Component/Dashboard.js"],"sourcesContent":["// ... (other imports)\nimport React from 'react'\nimport EditUser from './EditUser'; // Assuming the path to your EditUser component\n\nfunction Dashboard() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedUser, setEditedUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/user/all\");\n      setUsers(response.data);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  const handleUpdateUser = async (id) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/user/${id}`);\n      setSelectedUser(response.data);\n      setEditedUser(response.data); \n      navigate('/editprofile'); // Redirect to the edit profile page\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveEditedUser = async () => {\n    try {\n      await axios.put(`http://localhost:5000/api/user/${selectedUser._id}`, editedUser);\n      fetchUsers();\n      setSelectedUser(null); // Clear the selected user\n      setEditedUser(null); // Clear the editedUser data\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box mt={4}>\n        <Grid container spacing={4} justifyContent=\"center\">\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            users.map((user) => (\n              <Grid key={user._id} item xs={12} sm={6} md={4} lg={3}>\n                <Card elevation={3}>\n                  <CardContent>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                      {user.name}\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      Email: {user.email}\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      Address: {user.address}\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      Phone: {user.phone}\n                    </Typography>\n                    <Box mt={2} textAlign=\"center\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => handleUpdateUser(user._id)}\n                      >\n                        Update\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))\n          )}\n        </Grid>\n      </Box>\n      {selectedUser && (\n        <Card>\n          <CardContent>\n            <EditUser\n              editedUser={editedUser}\n              handleSaveEditedUser={handleSaveEditedUser}\n              setEditedUser={setEditedUser}\n            />\n          </CardContent>\n        </Card>\n      )}\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMO,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACdC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACtEd,QAAQ,CAACY,QAAQ,CAACG,IAAI,CAAC;MACvBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgB,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACrC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,kCAAiCM,EAAG,EAAC,CAAC;MACxEf,eAAe,CAACO,QAAQ,CAACG,IAAI,CAAC;MAC9BR,aAAa,CAACK,QAAQ,CAACG,IAAI,CAAC;MAC5BP,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMK,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMR,KAAK,CAACS,GAAG,CAAE,kCAAiClB,YAAY,CAACmB,GAAI,EAAC,EAAEjB,UAAU,CAAC;MACjFK,UAAU,CAAC,CAAC;MACZN,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACvBE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEpB,OAAA,CAAC4B,SAAS;IAACC,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtB9B,OAAA,CAAC+B,GAAG;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,eACT9B,OAAA,CAACiC,IAAI;QAACC,SAAS;QAACC,OAAO,EAAE,CAAE;QAACC,cAAc,EAAC,QAAQ;QAAAN,QAAA,EAChDxB,OAAO,gBACNN,OAAA,CAACqC,gBAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAEpBtC,KAAK,CAACuC,GAAG,CAAEC,IAAI,iBACb3C,OAAA,CAACiC,IAAI;UAAgBW,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAlB,QAAA,eACpD9B,OAAA,CAACiD,IAAI;YAACC,SAAS,EAAE,CAAE;YAAApB,QAAA,eACjB9B,OAAA,CAACmD,WAAW;cAAArB,QAAA,gBACV9B,OAAA,CAACoD,UAAU;gBAACC,OAAO,EAAC,IAAI;gBAACC,KAAK,EAAC,QAAQ;gBAACC,YAAY;gBAAAzB,QAAA,EACjDa,IAAI,CAACa;cAAI;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACbzC,OAAA,CAACoD,UAAU;gBAACK,KAAK,EAAC,eAAe;gBAACH,KAAK,EAAC,QAAQ;gBAAAxB,QAAA,GAAC,SACxC,EAACa,IAAI,CAACe,KAAK;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACbzC,OAAA,CAACoD,UAAU;gBAACK,KAAK,EAAC,eAAe;gBAACH,KAAK,EAAC,QAAQ;gBAAAxB,QAAA,GAAC,WACtC,EAACa,IAAI,CAACgB,OAAO;cAAA;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACbzC,OAAA,CAACoD,UAAU;gBAACK,KAAK,EAAC,eAAe;gBAACH,KAAK,EAAC,QAAQ;gBAAAxB,QAAA,GAAC,SACxC,EAACa,IAAI,CAACiB,KAAK;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,eACbzC,OAAA,CAAC+B,GAAG;gBAACC,EAAE,EAAE,CAAE;gBAAC6B,SAAS,EAAC,QAAQ;gBAAA/B,QAAA,eAC5B9B,OAAA,CAAC8D,MAAM;kBACLT,OAAO,EAAC,WAAW;kBACnBI,KAAK,EAAC,WAAW;kBACjBM,OAAO,EAAEA,CAAA,KAAMxC,gBAAgB,CAACoB,IAAI,CAAChB,GAAG,CAAE;kBAAAG,QAAA,EAC3C;gBAED;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAzBEE,IAAI,CAAChB,GAAG;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0Bb,CACP;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLjC,YAAY,iBACXR,OAAA,CAACiD,IAAI;MAAAnB,QAAA,eACH9B,OAAA,CAACmD,WAAW;QAAArB,QAAA,eACV9B,OAAA,CAACF,QAAQ;UACPY,UAAU,EAAEA,UAAW;UACvBe,oBAAoB,EAAEA,oBAAqB;UAC3Cd,aAAa,EAAEA;QAAc;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB;AAACvC,EAAA,CAhGQD,SAAS;AAAA+D,EAAA,GAAT/D,SAAS;AAkGlB,eAAeA,SAAS;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}